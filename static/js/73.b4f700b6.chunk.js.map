{"version":3,"file":"static/js/73.b4f700b6.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.js","components/Loader/Loader.js","components/MoviesList/MoviesList.styled.jsx","hooks/useFetchMovieDetails.js","hooks/useFetchSearchMovies.js","hooks/useFetchMovieCast.js","hooks/useFetchMovieReviews.js","hooks/useFetchPopular.js","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Inner = styled.div`\n\n`;\n\n\nexport const CastList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nlist-style: none;\njustify-content: space-between;\nalign-items: center;\ngap: 15px;\n`;\n\n\nexport const Name = styled.h3`\ntext-align: center;\nfont-size: 20px;\nfont-weight: 600;\ncolor:#F5F6F8;\nmargin-bottom: 0;\nmargin-top: 0;\n`;\n\nexport const Character = styled.p`\ntext-align: center;\nfont-size: 15px;\nfont-weight: 500;\ncolor:#F5F6F8;\n`;","import { CastList, Character, Inner, Name } from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport {\n  ErrorMessage,\n  ListItem,\n} from 'components/MoviesList/MoviesList.styled';\nimport { useFetchMovieCast } from 'hooks';\n\nconst Cast = () => {\n  const defaultImg = `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`;\n  const { error, loading, cast } = useFetchMovieCast();\n\n  return (\n    <Inner>\n      {loading && <Loader />}\n      {error && <ErrorMessage>‚ùå Something went wrong - {error}</ErrorMessage>}\n      {cast && (\n        <CastList>\n          {cast.length > 0 ? (\n            cast.map(item => (\n              <ListItem key={item.id}>\n                <Name>{item.name}</Name>\n                <Character>Character: {item.character}</Character>\n                <img\n                  src={\n                    item.profile_path\n                      ? [`https://image.tmdb.org/t/p/w500${item.profile_path}`]\n                      : defaultImg\n                  }\n                  alt={item.name}\n                  width={250}\n                />\n              </ListItem>\n            ))\n          ) : (\n            <li>\n              <ErrorMessage>We don't have information about cast</ErrorMessage>\n            </li>\n          )}\n        </CastList>\n      )}\n    </Inner>\n  );\n};\n\nexport default Cast;\n","import React from 'react';\nimport { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div style={{ zIndex: '1000', position: 'fixed', left: '45%', top: '44%' }}>\n      <Circles\n        height=\"160\"\n        width=\"160\"\n        color=\"#4fa94d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\npadding: 15px;\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\ngap: 15px;\nlist-style: none;\n`;\n\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 26px;\nborder: 0.5px solid #424750;\nbackground: #282C30;\nbox-shadow: 4px 4px 20px 0px rgba(16, 16, 18, 0.75), -3px -3px 15px 0px #262E32;\npadding: 10px;\n`;\n\nexport const ImgPoster = styled.img`\n border-radius: 26px;\n`;\n\nexport const Title = styled.h1`\ncolor: #fff;\ntext-align: center;\nwidth: 250px;\nheight: 35px;\nfont-size: 15px;\nfont-weight: 700;\ntext-transform: uppercase;\nmargin-bottom: 0;\n`;\n\nexport const ErrorMessage = styled.p`\ncolor:#F5F6F8;\ntext-align: center;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      if (!movieId) return;\n      try {\n        setLoading(true);\n        const data = await movieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  return { movies, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchFilms } from 'services/api';\n\nexport const useFetchSearchMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    const fetchSearch = async () => {\n      if (!query) return;\n      try {\n        setLoading(true);\n        const data = await searchFilms(query);\n        setSearch(data.results);\n      } catch {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSearch();\n  }, [query]);\n  return { search, error, loading, handleSubmit };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesCredits } from 'services/api';\n\nexport const useFetchMovieCast = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      if (!movieId) return;\n      try {\n        setLoading(true);\n        const data = await moviesCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return { error, loading, cast };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesReviews } from 'services/api';\n\nexport const useFetchMovieReviews = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      if (!movieId) return;\n      try {\n        setLoading(true);\n        const data = await moviesReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return { error, loading, reviews };\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrending } from 'services/api';\n\nexport const useFetchPopular = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrend = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchTrending();\n        setMovies(response.results);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrend();\n  }, []);\n\n  return { movies, error, loading };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4eede4a470802f6f0ed7ee55539b1602';\n\nexport const fetchTrending = async () => {\n  return (await axios.get(`trending/movie/day?api_key=${API_KEY}`)).data;\n};\n\nexport const searchFilms = async query => {\n  return (\n    await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    )\n  ).data;\n};\n\nexport const movieDetails = async id => {\n  return (await axios.get(`movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const moviesCredits = async id => {\n  return (await axios.get(`movie/${id}/credits?api_key=${API_KEY}`)).data;\n};\n\nexport const moviesReviews = async id => {\n  return (await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`)).data;\n};\n"],"names":["Inner","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","Name","_templateObject3","Character","_templateObject4","_useFetchMovieCast","useFetchMovieCast","error","loading","cast","_jsxs","children","_jsx","Loader","ErrorMessage","length","map","item","ListItem","name","character","src","profile_path","concat","alt","width","id","style","zIndex","position","left","top","Circles","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","ImgPoster","Title","_templateObject5","useFetchMovieDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movies","setMovie","_useState3","_useState4","setLoading","_useState5","_useState6","setError","useEffect","fetchDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","movieDetails","sent","t0","finish","stop","apply","arguments","useFetchSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","search","setSearch","query","get","fetchSearch","searchFilms","results","handleSubmit","value","setCast","fetchCast","moviesCredits","useFetchMovieReviews","reviews","setReviews","moviesReviews","useFetchPopular","setMovies","fetchTrend","response","fetchTrending","axios","API_KEY","_ref2","_callee2","_context2","_x","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}